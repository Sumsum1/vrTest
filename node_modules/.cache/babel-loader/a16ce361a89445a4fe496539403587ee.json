{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PC-05\\\\Downloads\\\\reat-three-fiber-vr\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC-05\\\\Downloads\\\\reat-three-fiber-vr\\\\src\\\\index.js\";\nimport VR from \"./three-webvr\";\nimport * as THREE from \"three\";\nimport React, { useRef, useMemo, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Canvas, useRender, useThree } from \"react-three-fiber\";\nimport \"./VRController\";\nimport \"./styles.css\";\n\nfunction Stars() {\n  var _this = this;\n\n  var group = useRef();\n  var theta = 0;\n  useRender(function () {\n    // Some things maybe shouldn't be declarative, we're in the render-loop here with full access to the instance\n    var r = 5 * Math.sin(THREE.Math.degToRad(theta += 0.003));\n    var s = Math.cos(THREE.Math.degToRad(theta * 2));\n    group.current.rotation.set(r, r, r);\n    group.current.scale.set(s, s, s);\n  });\n\n  var _useMemo = useMemo(function () {\n    var geo = new THREE.SphereBufferGeometry(1, 10, 10);\n    var mat = new THREE.MeshBasicMaterial({\n      color: new THREE.Color(\"lightpink\")\n    });\n    var coords = new Array(1000).fill().map(function (i) {\n      return [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400];\n    });\n    return [geo, mat, coords];\n  }, []),\n      _useMemo2 = _slicedToArray(_useMemo, 3),\n      geo = _useMemo2[0],\n      mat = _useMemo2[1],\n      coords = _useMemo2[2];\n\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, coords.map(function (_ref, i) {\n    var _ref2 = _slicedToArray(_ref, 3),\n        p1 = _ref2[0],\n        p2 = _ref2[1],\n        p3 = _ref2[2];\n\n    return /*#__PURE__*/React.createElement(\"mesh\", {\n      key: i,\n      geometry: geo,\n      material: mat,\n      position: [p1, p2, p3],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\nfunction App() {\n  var _useThree = useThree(),\n      gl = _useThree.gl;\n\n  var onVRControllerConnected = useMemo(function () {\n    return function (event) {\n      var controller = event.detail;\n      controller.standingMatrix = gl.vr.getStandingMatrix(); // attach controller events\n      // controller.on();\n\n      var geometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, -1)]);\n      var material = new THREE.LineBasicMaterial({\n        color: 0x0000ff,\n        depthTest: false,\n        depthWrite: false,\n        transparent: true\n      });\n      var line = new THREE.Line(geometry, material);\n      line.name = \"line\";\n      line.scale.z = 5;\n      line.rotation.x = Math.PI / 180 * -45;\n      controller.add(line);\n      var raycastTiltGroup = new THREE.Group();\n      var raycastDepth = new THREE.Mesh(new THREE.BoxGeometry(0.1, 0.1, 0.1), new THREE.MeshBasicMaterial());\n      raycastDepth.visible = true; // raycastDepth.visible = false;\n\n      raycastDepth.name = \"raycast-depth\";\n      raycastTiltGroup.rotation.x = Math.PI / 180 * -45;\n      raycastTiltGroup.add(raycastDepth);\n      controller.add(raycastTiltGroup);\n      controller.addEventListener(\"disconnected\", function (event) {\n        controller.parent.remove(controller);\n      });\n    };\n  }, [gl]);\n  useEffect(function () {\n    window.addEventListener(\"vr controller connected\", onVRControllerConnected);\n    return function () {\n      window.removeEventListener(\"vr controller connected\", onVRControllerConnected);\n    };\n  }, [onVRControllerConnected]);\n  useRender(function () {\n    THREE.VRController.update();\n  });\n  return /*#__PURE__*/React.createElement(Canvas, {\n    vr: true,\n    onCreated: function onCreated(_ref3) {\n      var gl = _ref3.gl;\n      return document.body.appendChild(VR.createButton(gl));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    color: \"lightblue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    color: \"white\",\n    intensity: 1,\n    position: [10, 10, 10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Stars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"names":["VR","THREE","React","useRef","useMemo","useEffect","ReactDOM","Canvas","useRender","useThree","Stars","group","theta","r","Math","sin","degToRad","s","cos","current","rotation","set","scale","geo","SphereBufferGeometry","mat","MeshBasicMaterial","color","Color","coords","Array","fill","map","i","random","p1","p2","p3","App","gl","onVRControllerConnected","event","controller","detail","standingMatrix","vr","getStandingMatrix","geometry","BufferGeometry","setFromPoints","Vector3","material","LineBasicMaterial","depthTest","depthWrite","transparent","line","Line","name","z","x","PI","add","raycastTiltGroup","Group","raycastDepth","Mesh","BoxGeometry","visible","addEventListener","parent","remove","window","removeEventListener","VRController","update","document","body","appendChild","createButton","rootElement","getElementById","render"],"sources":["C:/Users/PC-05/Downloads/reat-three-fiber-vr/src/index.js"],"sourcesContent":["import VR from \"./three-webvr\";\nimport * as THREE from \"three\";\nimport React, { useRef, useMemo, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Canvas, useRender, useThree } from \"react-three-fiber\";\n\nimport \"./VRController\";\n\nimport \"./styles.css\";\n\nfunction Stars() {\n  let group = useRef();\n  let theta = 0;\n  useRender(() => {\n    // Some things maybe shouldn't be declarative, we're in the render-loop here with full access to the instance\n    const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.003)));\n    const s = Math.cos(THREE.Math.degToRad(theta * 2));\n    group.current.rotation.set(r, r, r);\n    group.current.scale.set(s, s, s);\n  });\n\n  const [geo, mat, coords] = useMemo(() => {\n    const geo = new THREE.SphereBufferGeometry(1, 10, 10);\n    const mat = new THREE.MeshBasicMaterial({\n      color: new THREE.Color(\"lightpink\")\n    });\n    const coords = new Array(1000)\n      .fill()\n      .map(i => [\n        Math.random() * 800 - 400,\n        Math.random() * 800 - 400,\n        Math.random() * 800 - 400\n      ]);\n    return [geo, mat, coords];\n  }, []);\n\n  return (\n    <group ref={group}>\n      {coords.map(([p1, p2, p3], i) => (\n        <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />\n      ))}\n    </group>\n  );\n}\n\nfunction App() {\n  const { gl } = useThree();\n  const onVRControllerConnected = useMemo(\n    () => event => {\n      const controller = event.detail;\n      controller.standingMatrix = gl.vr.getStandingMatrix();\n      // attach controller events\n      // controller.on();\n      const geometry = new THREE.BufferGeometry().setFromPoints([\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, 0, -1)\n      ]);\n      const material = new THREE.LineBasicMaterial({\n        color: 0x0000ff,\n        depthTest: false,\n        depthWrite: false,\n        transparent: true\n      });\n\n      const line = new THREE.Line(geometry, material);\n      line.name = \"line\";\n      line.scale.z = 5;\n      line.rotation.x = (Math.PI / 180) * -45;\n      controller.add(line);\n\n      const raycastTiltGroup = new THREE.Group();\n      const raycastDepth = new THREE.Mesh(\n        new THREE.BoxGeometry(0.1, 0.1, 0.1),\n        new THREE.MeshBasicMaterial()\n      );\n      raycastDepth.visible = true;\n      // raycastDepth.visible = false;\n      raycastDepth.name = \"raycast-depth\";\n      raycastTiltGroup.rotation.x = (Math.PI / 180) * -45;\n      raycastTiltGroup.add(raycastDepth);\n\n      controller.add(raycastTiltGroup);\n\n      controller.addEventListener(\"disconnected\", function(event) {\n        controller.parent.remove(controller);\n      });\n    },\n    [gl]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"vr controller connected\", onVRControllerConnected);\n    return () => {\n      window.removeEventListener(\n        \"vr controller connected\",\n        onVRControllerConnected\n      );\n    };\n  }, [onVRControllerConnected]);\n\n  useRender(() => {\n    THREE.VRController.update();\n  });\n\n  return (\n    <Canvas\n      vr\n      onCreated={({ gl }) => document.body.appendChild(VR.createButton(gl))}\n    >\n      <ambientLight color=\"lightblue\" />\n      <pointLight color=\"white\" intensity={1} position={[10, 10, 10]} />\n      <Stars />\n    </Canvas>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}